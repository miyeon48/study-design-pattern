@startuml test

interface FlyBehavior {
    +fly(): void
}

class FlyWithWings {
    +fly(): void
}

class FlyNoWay {
    +fly(): void
}

interface QuackBehavior {
    +quack(): void
}

class Quack {
    +quack(): void
}

class Squeak {
    +quack(): void
}

class MuteQuack {
    +quack(): void
}

class Duck {
    flyBehavior : FlyBehavior 
    quackBehavior : QuackBehavior 
    +perFormFly(): void
    +perFormQuack(): void
    +setFlyBehavior(FlyBehavior) : void
    +setQuackBehavior(QuackBehavior) : void
}

FlyBehavior  <|.. FlyWithWings
FlyBehavior  <|.. FlyNoWay

QuackBehavior <|.. Quack
QuackBehavior <|.. Squeak
QuackBehavior <|.. MuteQuack


FlyBehavior --> Duck
QuackBehavior --> Duck

@enduml